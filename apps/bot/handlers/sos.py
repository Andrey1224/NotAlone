"""SOS handler for emergency hotlines and crisis support."""

import json
import logging
from pathlib import Path

from aiogram import Router
from aiogram.filters import Command
from aiogram.types import Message

router = Router()
logger = logging.getLogger(__name__)

# Path to SOS data file
SOS_DATA_PATH = Path(__file__).parent.parent / "data" / "sos_ru.json"


@router.message(Command("sos"))
async def cmd_sos(message: Message) -> None:
    """
    Handle /sos command - display emergency hotlines and crisis support.

    Shows list of crisis hotlines, psychological help services, and emergency contacts.
    Data loaded from apps/bot/data/sos_ru.json.
    """
    try:
        # Load SOS data from JSON file
        if not SOS_DATA_PATH.exists():
            logger.error(f"SOS data file not found: {SOS_DATA_PATH}")
            await message.answer(
                "üÜò –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å\n\n"
                "üìû –¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–≤–µ—Ä–∏—è: 8-800-2000-122 (–∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ, –±–µ—Å–ø–ª–∞—Ç–Ω–æ)\n"
                "üìû –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å: 051 (–ú–æ—Å–∫–≤–∞)\n"
                "üöë –°–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å: 112\n\n"
                "‚ö†Ô∏è –ü—Ä–∏ —Å–µ—Ä—å–µ–∑–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º!"
            )
            return

        with open(SOS_DATA_PATH, encoding="utf-8") as f:
            sos_data = json.load(f)

        # Build message from loaded data
        lines = ["üÜò –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å\n"]

        # Add hotlines
        if "hotlines" in sos_data:
            for hotline in sos_data["hotlines"]:
                name = hotline.get("name", "")
                phone = hotline.get("phone", "")
                hours = hotline.get("hours", "")
                lines.append(f"üìû {name}: {phone}")
                if hours:
                    lines.append(f"   {hours}")

        # Add emergency services
        if "emergency" in sos_data:
            lines.append("")
            for service in sos_data["emergency"]:
                name = service.get("name", "")
                phone = service.get("phone", "")
                lines.append(f"üöë {name}: {phone}")

        # Add disclaimer
        lines.append("\n‚ö†Ô∏è –ü—Ä–∏ —Å–µ—Ä—å–µ–∑–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º!")
        lines.append("–≠—Ç–æ—Ç –±–æ—Ç –Ω–µ –∑–∞–º–µ–Ω—è–µ—Ç –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—É—é –º–µ–¥–∏—Ü–∏–Ω—Å–∫—É—é –∏–ª–∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫—É—é –ø–æ–º–æ—â—å.")

        await message.answer("\n".join(lines))

    except json.JSONDecodeError as e:
        logger.error(f"Failed to parse SOS data: {e}")
        await message.answer(
            "üÜò –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å\n\n"
            "üìû –¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–≤–µ—Ä–∏—è: 8-800-2000-122 (–∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ, –±–µ—Å–ø–ª–∞—Ç–Ω–æ)\n"
            "üìû –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å: 051 (–ú–æ—Å–∫–≤–∞)\n"
            "üöë –°–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å: 112\n\n"
            "‚ö†Ô∏è –ü—Ä–∏ —Å–µ—Ä—å–µ–∑–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º!"
        )

    except Exception as e:
        logger.error(f"Failed to load SOS data: {e}")
        await message.answer(
            "üÜò –≠–∫—Å—Ç—Ä–µ–Ω–Ω–∞—è –ø–æ–º–æ—â—å\n\n"
            "üìû –¢–µ–ª–µ—Ñ–æ–Ω –¥–æ–≤–µ—Ä–∏—è: 8-800-2000-122 (–∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ, –±–µ—Å–ø–ª–∞—Ç–Ω–æ)\n"
            "üìû –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å: 051 (–ú–æ—Å–∫–≤–∞)\n"
            "üöë –°–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å: 112\n\n"
            "‚ö†Ô∏è –ü—Ä–∏ —Å–µ—Ä—å–µ–∑–Ω—ã—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞–º!"
        )
