"""Inline keyboard builders."""

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup


def get_topics_keyboard(selected: set[str] | None = None) -> InlineKeyboardMarkup:
    """Build inline keyboard for topic selection."""
    if selected is None:
        selected = set()

    topics = [
        ("üíî –†–∞–∑–≤–æ–¥", "divorce"),
        ("üî• –í—ã–≥–æ—Ä–∞–Ω–∏–µ", "burnout"),
        ("üè† –ü–µ—Ä–µ–µ–∑–¥", "relocation"),
        ("üíº –°–º–µ–Ω–∞ —Ä–∞–±–æ—Ç—ã", "job_change"),
        ("üò¢ –£—Ç—Ä–∞—Ç–∞", "loss"),
        ("üå± –õ–∏—á–Ω–æ—Å—Ç–Ω—ã–π —Ä–æ—Å—Ç", "growth"),
        ("üò∞ –¢—Ä–µ–≤–æ–≥–∞", "anxiety"),
        ("ü´Ç –û–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ", "loneliness"),
        ("üë∂ –†–æ–¥–∏—Ç–µ–ª—å—Å—Ç–≤–æ", "parenting"),
        ("üè• –ó–¥–æ—Ä–æ–≤—å–µ", "health"),
        ("üíë –û—Ç–Ω–æ—à–µ–Ω–∏—è", "relationships"),
        ("üìà –ö–∞—Ä—å–µ—Ä–∞", "career"),
    ]

    buttons = []
    for text, slug in topics:
        # Add checkmark if selected
        display_text = f"‚úÖ {text}" if slug in selected else text
        buttons.append([InlineKeyboardButton(text=display_text, callback_data=f"topic_{slug}")])

    # Add "Done" button
    buttons.append([InlineKeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤–æ", callback_data="topics_done")])

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_timezones_keyboard() -> InlineKeyboardMarkup:
    """Build inline keyboard for timezone selection."""
    timezones = [
        ("üá∑üá∫ –ú–æ—Å–∫–≤–∞ (–ú–°–ö)", "Europe/Moscow"),
        ("üá∑üá∫ –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥ (–ú–°–ö+2)", "Asia/Yekaterinburg"),
        ("üá∑üá∫ –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ (–ú–°–ö+4)", "Asia/Novosibirsk"),
        ("üá∑üá∫ –í–ª–∞–¥–∏–≤–æ—Å—Ç–æ–∫ (–ú–°–ö+7)", "Asia/Vladivostok"),
        ("üá∫üá¶ –ö–∏–µ–≤", "Europe/Kiev"),
        ("üá∞üáø –ê–ª–º–∞—Ç—ã", "Asia/Almaty"),
        ("üáßüáæ –ú–∏–Ω—Å–∫", "Europe/Minsk"),
        ("üá¨üá™ –¢–±–∏–ª–∏—Å–∏", "Asia/Tbilisi"),
        ("üá¶üá≤ –ï—Ä–µ–≤–∞–Ω", "Asia/Yerevan"),
        ("üá¶üáø –ë–∞–∫—É", "Asia/Baku"),
    ]

    buttons = [[InlineKeyboardButton(text=text, callback_data=f"tz_{tz}")] for text, tz in timezones]

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_match_confirmation_keyboard(match_id: int) -> InlineKeyboardMarkup:
    """Build keyboard for match confirmation."""
    buttons = [
        [
            InlineKeyboardButton(text="‚úÖ –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"match_accept_{match_id}"),
            InlineKeyboardButton(text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"match_decline_{match_id}"),
        ]
    ]

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def get_tip_amount_keyboard(match_id: int) -> InlineKeyboardMarkup:
    """Build keyboard for tip amount selection."""
    amounts = [50, 100, 200, 500]
    buttons = [
        [InlineKeyboardButton(text=f"‚≠ê {amount}", callback_data=f"tip_{match_id}_{amount}")] for amount in amounts
    ]

    return InlineKeyboardMarkup(inline_keyboard=buttons)
