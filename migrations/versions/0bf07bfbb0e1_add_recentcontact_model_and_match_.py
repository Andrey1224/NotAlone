"""Add RecentContact model and Match acceptance fields

Revision ID: 0bf07bfbb0e1
Revises: 20251002_001
Create Date: 2025-10-02 20:48:38.974545

"""

from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "0bf07bfbb0e1"
down_revision: str | None = "20251002_001"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "recent_contacts",
        sa.Column("user_id", sa.BigInteger(), nullable=False),
        sa.Column("other_id", sa.BigInteger(), nullable=False),
        sa.Column("until", sa.DateTime(timezone=True), nullable=False),
        sa.PrimaryKeyConstraint("user_id", "other_id"),
    )
    op.alter_column(
        "ai_hints", "id", existing_type=sa.INTEGER(), type_=sa.BigInteger(), existing_nullable=False, autoincrement=True
    )
    op.alter_column(
        "ai_hints", "chat_session_id", existing_type=sa.INTEGER(), type_=sa.BigInteger(), existing_nullable=False
    )
    op.alter_column(
        "ai_hints",
        "hint_type",
        existing_type=sa.VARCHAR(length=32),
        type_=sa.String(length=16),
        existing_nullable=False,
    )
    op.alter_column("ai_hints", "accepted", existing_type=sa.BOOLEAN(), nullable=False)
    op.create_index(op.f("ix_ai_hints_chat_session_id"), "ai_hints", ["chat_session_id"], unique=False)
    op.drop_constraint(op.f("ai_hints_chat_session_id_fkey"), "ai_hints", type_="foreignkey")
    op.drop_constraint(op.f("ai_hints_user_id_fkey"), "ai_hints", type_="foreignkey")
    op.alter_column(
        "chat_sessions",
        "id",
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('chat_sessions_id_seq'::regclass)"),
    )
    op.alter_column(
        "chat_sessions", "match_id", existing_type=sa.INTEGER(), type_=sa.BigInteger(), existing_nullable=False
    )
    op.create_index(op.f("ix_chat_sessions_match_id"), "chat_sessions", ["match_id"], unique=True)
    op.drop_constraint(op.f("chat_sessions_match_id_fkey"), "chat_sessions", type_="foreignkey")
    op.add_column("matches", sa.Column("user_a_accepted", sa.Boolean(), nullable=True))
    op.add_column("matches", sa.Column("user_b_accepted", sa.Boolean(), nullable=True))
    op.add_column("matches", sa.Column("expires_at", sa.DateTime(), nullable=True))
    op.alter_column(
        "matches",
        "id",
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('matches_id_seq'::regclass)"),
    )
    op.alter_column(
        "matches", "status", existing_type=sa.VARCHAR(length=32), type_=sa.String(length=16), existing_nullable=False
    )
    op.create_unique_constraint("uq_match_users", "matches", ["user_a", "user_b"])
    op.drop_constraint(op.f("matches_user_a_fkey"), "matches", type_="foreignkey")
    op.drop_constraint(op.f("matches_user_b_fkey"), "matches", type_="foreignkey")
    op.drop_column("matches", "declined_by")
    op.drop_column("matches", "declined_at")
    op.alter_column(
        "safety_flags",
        "id",
        existing_type=sa.INTEGER(),
        type_=sa.BigInteger(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.alter_column(
        "safety_flags", "chat_session_id", existing_type=sa.INTEGER(), type_=sa.BigInteger(), existing_nullable=False
    )
    op.alter_column(
        "safety_flags",
        "label",
        existing_type=sa.VARCHAR(length=64),
        type_=sa.String(length=32),
        existing_nullable=False,
    )
    op.create_index(op.f("ix_safety_flags_chat_session_id"), "safety_flags", ["chat_session_id"], unique=False)
    op.drop_constraint(op.f("safety_flags_user_id_fkey"), "safety_flags", type_="foreignkey")
    op.drop_constraint(op.f("safety_flags_chat_session_id_fkey"), "safety_flags", type_="foreignkey")
    op.alter_column(
        "tips", "id", existing_type=sa.INTEGER(), type_=sa.BigInteger(), existing_nullable=False, autoincrement=True
    )
    op.alter_column("tips", "match_id", existing_type=sa.INTEGER(), type_=sa.BigInteger(), existing_nullable=False)
    op.alter_column("tips", "amount_minor", existing_type=sa.INTEGER(), type_=sa.BigInteger(), existing_nullable=False)
    op.alter_column(
        "tips", "currency", existing_type=sa.VARCHAR(length=3), type_=sa.String(length=8), existing_nullable=False
    )
    op.alter_column(
        "tips", "provider_fee_minor", existing_type=sa.INTEGER(), type_=sa.BigInteger(), existing_nullable=False
    )
    op.alter_column(
        "tips", "our_commission_minor", existing_type=sa.INTEGER(), type_=sa.BigInteger(), existing_nullable=False
    )
    op.alter_column(
        "tips", "status", existing_type=sa.VARCHAR(length=32), type_=sa.String(length=16), existing_nullable=False
    )
    op.create_index("idx_tips_match_id", "tips", ["match_id"], unique=False)
    op.drop_constraint(op.f("tips_match_id_fkey"), "tips", type_="foreignkey")
    op.drop_constraint(op.f("tips_to_user_fkey"), "tips", type_="foreignkey")
    op.drop_constraint(op.f("tips_from_user_fkey"), "tips", type_="foreignkey")
    op.drop_column("tips", "paid_at")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("tips", sa.Column("paid_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f("tips_from_user_fkey"), "tips", "users", ["from_user"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(op.f("tips_to_user_fkey"), "tips", "users", ["to_user"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(op.f("tips_match_id_fkey"), "tips", "matches", ["match_id"], ["id"], ondelete="CASCADE")
    op.drop_index("idx_tips_match_id", table_name="tips")
    op.alter_column(
        "tips", "status", existing_type=sa.String(length=16), type_=sa.VARCHAR(length=32), existing_nullable=False
    )
    op.alter_column(
        "tips", "our_commission_minor", existing_type=sa.BigInteger(), type_=sa.INTEGER(), existing_nullable=False
    )
    op.alter_column(
        "tips", "provider_fee_minor", existing_type=sa.BigInteger(), type_=sa.INTEGER(), existing_nullable=False
    )
    op.alter_column(
        "tips", "currency", existing_type=sa.String(length=8), type_=sa.VARCHAR(length=3), existing_nullable=False
    )
    op.alter_column("tips", "amount_minor", existing_type=sa.BigInteger(), type_=sa.INTEGER(), existing_nullable=False)
    op.alter_column("tips", "match_id", existing_type=sa.BigInteger(), type_=sa.INTEGER(), existing_nullable=False)
    op.alter_column(
        "tips", "id", existing_type=sa.BigInteger(), type_=sa.INTEGER(), existing_nullable=False, autoincrement=True
    )
    op.create_foreign_key(
        op.f("safety_flags_chat_session_id_fkey"),
        "safety_flags",
        "chat_sessions",
        ["chat_session_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.create_foreign_key(
        op.f("safety_flags_user_id_fkey"), "safety_flags", "users", ["user_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_index(op.f("ix_safety_flags_chat_session_id"), table_name="safety_flags")
    op.alter_column(
        "safety_flags",
        "label",
        existing_type=sa.String(length=32),
        type_=sa.VARCHAR(length=64),
        existing_nullable=False,
    )
    op.alter_column(
        "safety_flags", "chat_session_id", existing_type=sa.BigInteger(), type_=sa.INTEGER(), existing_nullable=False
    )
    op.alter_column(
        "safety_flags",
        "id",
        existing_type=sa.BigInteger(),
        type_=sa.INTEGER(),
        existing_nullable=False,
        autoincrement=True,
    )
    op.add_column("matches", sa.Column("declined_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column("matches", sa.Column("declined_by", sa.BIGINT(), autoincrement=False, nullable=True))
    op.create_foreign_key(op.f("matches_user_b_fkey"), "matches", "users", ["user_b"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(op.f("matches_user_a_fkey"), "matches", "users", ["user_a"], ["id"], ondelete="CASCADE")
    op.drop_constraint("uq_match_users", "matches", type_="unique")
    op.alter_column(
        "matches", "status", existing_type=sa.String(length=16), type_=sa.VARCHAR(length=32), existing_nullable=False
    )
    op.alter_column(
        "matches",
        "id",
        existing_type=sa.BigInteger(),
        type_=sa.INTEGER(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('matches_id_seq'::regclass)"),
    )
    op.drop_column("matches", "expires_at")
    op.drop_column("matches", "user_b_accepted")
    op.drop_column("matches", "user_a_accepted")
    op.create_foreign_key(
        op.f("chat_sessions_match_id_fkey"), "chat_sessions", "matches", ["match_id"], ["id"], ondelete="CASCADE"
    )
    op.drop_index(op.f("ix_chat_sessions_match_id"), table_name="chat_sessions")
    op.alter_column(
        "chat_sessions", "match_id", existing_type=sa.BigInteger(), type_=sa.INTEGER(), existing_nullable=False
    )
    op.alter_column(
        "chat_sessions",
        "id",
        existing_type=sa.BigInteger(),
        type_=sa.INTEGER(),
        existing_nullable=False,
        autoincrement=True,
        existing_server_default=sa.text("nextval('chat_sessions_id_seq'::regclass)"),
    )
    op.create_foreign_key(op.f("ai_hints_user_id_fkey"), "ai_hints", "users", ["user_id"], ["id"], ondelete="CASCADE")
    op.create_foreign_key(
        op.f("ai_hints_chat_session_id_fkey"),
        "ai_hints",
        "chat_sessions",
        ["chat_session_id"],
        ["id"],
        ondelete="CASCADE",
    )
    op.drop_index(op.f("ix_ai_hints_chat_session_id"), table_name="ai_hints")
    op.alter_column("ai_hints", "accepted", existing_type=sa.BOOLEAN(), nullable=True)
    op.alter_column(
        "ai_hints",
        "hint_type",
        existing_type=sa.String(length=16),
        type_=sa.VARCHAR(length=32),
        existing_nullable=False,
    )
    op.alter_column(
        "ai_hints", "chat_session_id", existing_type=sa.BigInteger(), type_=sa.INTEGER(), existing_nullable=False
    )
    op.alter_column(
        "ai_hints", "id", existing_type=sa.BigInteger(), type_=sa.INTEGER(), existing_nullable=False, autoincrement=True
    )
    op.drop_table("recent_contacts")
    # ### end Alembic commands ###
